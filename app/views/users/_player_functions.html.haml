:javascript

	function newSongsList() {
		var radioStation = {station: currentStation, played_songs: playedUpdate, user_id: currentUserId}
		$.ajax({
			url: '/request_playlist',
			data: radioStation,
			success: function(data) {
				songs = shuffleList(data);
				console.log(songs);
				if(songs.length > 0) {
					executePlaylist();
				}
			}
		});
		playedUpdate = [];
	}

	function playPause() {
		if(currentSong['upload_source'] === 'youtube') {
			var playerState = ytPlayer.getPlayerState();
			if(/[25]|-1/.test(playerState)){
				//Play video if it is paused (2), cued (5), or unstarted (-1)
				ytPlayer.setVolume(volume);
				ytPlayer.playVideo();
			}
			else if(/[13]/.test(playerState)) {
				//Pause video if already playing or buffering
				ytPlayer.pauseVideo();
			}
		}
		else if(currentSong['upload_source'] == 'soundcloud') {
			if(scWidget.paused) {
				scWidget.setVolume(volume);
				scWidget.play();
			}
			else {
				console.log('sc pausing...')
				scWidget.pause();
			}
		}
	}

	function showArtistInfo(song) {
		var songTitle = $('#radio-controls .primary .currently-playing span.song-title');
		var artistName = $('#radio-controls .primary .currently-playing span.artist');
		var songDuration = $('#radio-controls .seek-scrub .seek-val span.duration');
		songTitle.text(song['song_title']);
		artistName.text(song['artist_name']);
		var duration = song['duration'].split(/^0/);
		duration = duration[duration.length - 1];
		songDuration.text(duration);
	}

	function executePlaylist() {
		if(!ytPlayerReady) {
			//Wait until players are ready
			if(!runOnYTReady) {
				onYouTubeIframeAPIReady();
				runOnYTReady = true;
			}
			setTimeout(executePlaylist, 200);
		}
		else {
			if(!scPlayerReady) {
				if(!runInitSC) {
					initSCPlayer();
				}
			}
			//Once players are ready execute the playlist
			if(songs.length > 0) {
				var firstSong = songs[0];
				var firstSource = firstSong['upload_source'];
				currentSong = firstSong;
				showArtistInfo(currentSong);
				if(firstSource === 'youtube') {
					$('#soundcloud, .overlay').hide();
					$('#youtube').show();
					ytPlayer.loadVideoById({videoId: firstSong['song_id']});
					ytPlayer.setVolume(volume);
				}
				else if(firstSource === 'soundcloud') {
					playSCSong(currentSong);
					$('#youtube').hide();
					$('#soundcloud, .overlay').show();
				}
			}
		}
	}

	function playNextSong(){
		//Identify source of the next song and play it in the
		// appropriate player
		if(!playLast) {
			songHistory.push(songs.shift());
			playedUpdate.push(songHistory[songHistory.length - 1]['song_id'])
		}
		else {
			songs.unshift(songHistory.pop());
			playedUpdate.pop();
			playLast = false;
		}
		if(songs.length > 0) {
			var nextSong = songs[0];
			lastPlayed = currentSong;
			currentSong = nextSong;
			showArtistInfo(currentSong);
			
			console.log('hiding .player');
			if(nextSong['upload_source'] === 'youtube') {
				ytPlayer.loadVideoById({videoId: currentSong['song_id']});
				ytPlayer.setVolume(volume);
				$('#soundcloud, .overlay').hide();
				$('#youtube').show();
			}
			else if(nextSong['upload_source'] === 'soundcloud') {
				playSCSong(currentSong);
				$('#youtube').hide();
				$('#soundcloud, .overlay').show();
			}
			calloutBox = $('.callout#show-artist-profile');
			if(calloutBox.css('display') === 'block') {
				newArtistProfile = true;
				$('#get-artist-info').click();
			}
		}
		else {
			//Songs list is now empty
			newSongsList();
		}
	}

	function shuffleList(lst) {
		var new_lst = lst;
		for (var i = new_lst.length - 1; i > 0; i--) {
			var j = Math.floor(Math.random() * (i + 1));
			var temp = new_lst[i];
			new_lst[i] = new_lst[j];
			new_lst[j] = temp;
		}
		return new_lst;
	}

	function setQuality(level) {
		ytPlayer.setPlaybackQuality(level);
	}

	function initSCPlayer(song) {
		//Load the SC player the first time a SC file is streamed in session

		SC.initialize({
			client_id: '#{ENV["SOUNDCLOUD_APP_ID"]}'
		});
		scPlayerReady = true;
		runInitSC = true;
	}

	function playSCSong(song) {
		SC.stream('/tracks/' + song['song_id'], {
			preferFlash: false,
			playHTML5Audio: true,
			onfinish: function() {
					console.log('finished this SC song...');
					clearInterval(scrubInterval);
					playNextSong();
				}
			}, function(sound) {
				scWidget = sound;
				scWidget.setVolume(volume);
				scWidget.play();
				scrubInterval = setInterval(seekTracker, scrubDelay);
			});
	}

	function arr_difference(a1, a2) {
		//Return an array that is the difference of a1 and a2
		difference = $.grep(a1,function(x) {return $.inArray(x, a2) < 0})
		return difference
	}

	function seekTracker() {
		if(currentSong) {
			var newVal;
			if(currentSong['upload_source'] === 'youtube') {
				newVal = ytPlayer.getCurrentTime() / ytPlayer.getDuration();
			}
			else if(currentSong['upload_source'] === 'soundcloud') {
				newVal = scWidget.position / scWidget.duration;
			}
			$('#seek-slider').simpleSlider('setValue', newVal);
		}
	}

	function manualSeek(seekTo) {
		console.log('executing...')
		if(currentSong) {
			if(currentSong['upload_source'] === 'youtube') {
				ytPlayer.seekTo( seekTo * ytPlayer.getDuration() );
				console.log(ytPlayer.getCurrentTime());
			}
			else if(currentSong['upload_source'] === 'soundcloud') {
				scWidget.setPosition( seekTo * scWidget.duration );
				console.log(scWidget.position);
			}
			scrubInterval = setInterval(seekTracker, scrubDelay);
		}
	}
	
	function getSongDuration(song) {
		if(song['upload_source'] === 'youtube') {
			return ytPlayer.getDuration();
		}
		else if(song['upload_source'] === 'soundcloud') {
			return scWidget.duration/1000;
		}
	}
	
	function currentSongTime(song) {
		if(song['upload_source'] === 'youtube') {
			return ytPlayer.getCurrentTime();
		}
		else if(song['upload_source'] === 'soundcloud') {
			return scWidget.position/1000;
		}
	}
	
	function secToMinSec(sec) {
		//Convert seconds to Minutes:Seconds in 00:00 format
		var sec1 = Math.floor(sec);
		var mins = Math.floor(sec1 / 60);
		var secs = sec1 % 60;
		if(secs < 10) {
			secs = '0' + secs;
		}
		var time = mins + ':' + secs;
		return time;
	}

