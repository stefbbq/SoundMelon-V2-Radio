- if all_songs.size > 0
	- all_songs.each do |song|
		- song = song[1]
		- if song.class == YouTubeIt::Model::Video
			- song_id = song.unique_id
			- song_url = song.player_url
			- song_private = song.perm_private
			- duration = song.duration
			- upload_source = 'youtube'
			- source_abbr = 'YT'
			- @current_song = Song.where(artist_id: current_artist.id, song_id: song_id)
			- img_src = song.thumbnails.first.url
			- no_brand = false
			- source_tags = song.keywords
		- if song.class == Hashie::Mash
			- song_id = song.id
			- song_url = song.permalink_url
			- song_private = (song.sharing == 'private')
			- duration = song.duration/1000.0
			- upload_source = 'soundcloud'
			- source_abbr = 'SC'
			- @current_song = Song.where(artist_id: current_artist.id, song_id: song_id)
			- sc_logo = "/assets/sc-placeholder.png"
			- img_src = (song.artwork_url.nil?) ? sc_logo : song.artwork_url
			- no_brand = (song.artwork_url.nil?) ? true : false
			- source_tags = ( song.genre.nil? ? [] : song.genre.split() ) | ( song.tag_list.nil? ? [] : song.tag_list.split(' ') )
			- source_tags.delete_if {|tag| tag.include? "soundcloud:source"}
		- is_blocked = BlockedUpload.exists?(song_id: song_id)
		- too_short = duration < 30
		- too_long = duration > 1500
		- bad_duration = too_short || too_long
		

		- #if duration < 121
		- #elsif duration > 1500
		- #else
		- @in_db = !@current_song.empty?
		- @is_active = (@in_db && @current_song.first.active)
		- @edit_action = @in_db ? "edit" : "new"
		- state = @is_active && !song_private ? "active" : "inactive"
		- if song_private && @is_active
			- @current_song.first.active = false
			- @is_active = false
			- @current_song.first.save

		.song-wrapper{id: song_id}
			
			.song-content
			
				.song-basic
					.song-image{style: "background: url(#{img_src}) center no-repeat"}
						- if !no_brand
							.brand-logo{class: 'source-' + source_abbr.downcase}
					.song-information
						%span.song-title= song.title
						%span.duration= to_minutes(duration)
						%span.state{class: state}= state
					- if is_blocked
						.block-msg 
							%span This song has been blocked due to reporting and investigation.
					- if bad_duration
						.block-msg 
							%span This song is too #{too_short ? 'short' : 'long'}!
				- if !is_blocked && !bad_duration && !Song.exists?(song_id: song_id)
					= link_to new_song_path({song_id: song_id, upload_source: upload_source, song_url: song_url, song_private: song_private, source_tags: source_tags, song_title: song.title, song_image: img_src, duration: duration}), remote: true, class: 'song-link new' do
						%span.div-link
				- elsif !is_blocked && !bad_duration
					- id = Song.find_by_song_id(song_id).id
					= link_to edit_song_path({id: id, song_id: song_id, upload_source: upload_source, song_url: song_url, song_private: song_private, source_tags: source_tags, song_title: song.title, song_image: img_src, duration: duration}), remote: true, class: 'song-link edit' do
						%span.div-link
						
			.section-divider